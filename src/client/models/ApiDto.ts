/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform OpenAPI definition
 * OpenAPI definition for the Platform and Ecosystem for Quantum-assisted Artificial Intelligence Platform
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stoneone.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime'
import type {PricingPlanDto} from './PricingPlanDto'
import {PricingPlanDtoFromJSON, PricingPlanDtoToJSON} from './PricingPlanDto'
import type {TaxonomyElement} from './TaxonomyElement'
import {TaxonomyElementFromJSON, TaxonomyElementToJSON} from './TaxonomyElement'

/**
 *
 * @export
 * @interface ApiDto
 */
export interface ApiDto {
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    serviceId?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    context?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    version?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    gatewayEndpoint?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    quantumBackend?: ApiDtoQuantumBackendEnum;
    /**
     *
     * @type {Array<PricingPlanDto>}
     * @memberof ApiDto
     */
    pricingPlans?: Array<PricingPlanDto>;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    pricingCategory?: ApiDtoPricingCategoryEnum;
    /**
     *
     * @type {Set<TaxonomyElement>}
     * @memberof ApiDto
     */
    industries?: Set<TaxonomyElement>;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    provider?: string;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    lifecycle?: ApiDtoLifecycleEnum;
    /**
     *
     * @type {string}
     * @memberof ApiDto
     */
    serviceType?: ApiDtoServiceTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ApiDto
     */
    rating?: number;
    /**
     *
     * @type {boolean}
     * @memberof ApiDto
     */
    isFeatured?: boolean;
}


/**
 * @export
 */
export const ApiDtoQuantumBackendEnum = {
    Ibm: 'IBM',
    Ionq: 'IONQ',
    Dwave: 'DWAVE',
    None: 'NONE'
} as const;
export type ApiDtoQuantumBackendEnum = typeof ApiDtoQuantumBackendEnum[keyof typeof ApiDtoQuantumBackendEnum];

/**
 * @export
 */
export const ApiDtoPricingCategoryEnum = {
    Free: 'FREE',
    Freemium: 'FREEMIUM',
    Commercial: 'COMMERCIAL'
} as const;
export type ApiDtoPricingCategoryEnum = typeof ApiDtoPricingCategoryEnum[keyof typeof ApiDtoPricingCategoryEnum];

/**
 * @export
 */
export const ApiDtoLifecycleEnum = {
    Created: 'CREATED',
    Accessible: 'ACCESSIBLE',
    Published: 'PUBLISHED'
} as const;
export type ApiDtoLifecycleEnum = typeof ApiDtoLifecycleEnum[keyof typeof ApiDtoLifecycleEnum];

/**
 * @export
 */
export const ApiDtoServiceTypeEnum = {
    Managed: 'MANAGED',
    External: 'EXTERNAL'
} as const;
export type ApiDtoServiceTypeEnum = typeof ApiDtoServiceTypeEnum[keyof typeof ApiDtoServiceTypeEnum];


/**
 * Check if a given object implements the ApiDto interface.
 */
export function instanceOfApiDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApiDtoFromJSON(json: any): ApiDto {
    return ApiDtoFromJSONTyped(json, false);
}

export function ApiDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'serviceId': !exists(json, 'serviceId') ? undefined : json['serviceId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'context': !exists(json, 'context') ? undefined : json['context'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'gatewayEndpoint': !exists(json, 'gatewayEndpoint') ? undefined : json['gatewayEndpoint'],
        'quantumBackend': !exists(json, 'quantumBackend') ? undefined : json['quantumBackend'],
        'pricingPlans': !exists(json, 'pricingPlans') ? undefined : ((json['pricingPlans'] as Array<any>).map(PricingPlanDtoFromJSON)),
        'pricingCategory': !exists(json, 'pricingCategory') ? undefined : json['pricingCategory'],
        'industries': !exists(json, 'industries') ? undefined : (new Set((json['industries'] as Array<any>).map(TaxonomyElementFromJSON))),
        'provider': !exists(json, 'provider') ? undefined : json['provider'],
        'lifecycle': !exists(json, 'lifecycle') ? undefined : json['lifecycle'],
        'serviceType': !exists(json, 'serviceType') ? undefined : json['serviceType'],
        'rating': !exists(json, 'rating') ? undefined : json['rating'],
        'isFeatured': !exists(json, 'isFeatured') ? undefined : json['isFeatured'],
    };
}

export function ApiDtoToJSON(value?: ApiDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'serviceId': value.serviceId,
        'name': value.name,
        'context': value.context,
        'version': value.version,
        'description': value.description,
        'gatewayEndpoint': value.gatewayEndpoint,
        'quantumBackend': value.quantumBackend,
        'pricingPlans': value.pricingPlans === undefined ? undefined : ((value.pricingPlans as Array<any>).map(PricingPlanDtoToJSON)),
        'pricingCategory': value.pricingCategory,
        'industries': value.industries === undefined ? undefined : (Array.from(value.industries as Set<any>).map(TaxonomyElementToJSON)),
        'provider': value.provider,
        'lifecycle': value.lifecycle,
        'serviceType': value.serviceType,
        'rating': value.rating,
        'isFeatured': value.isFeatured,
    };
}


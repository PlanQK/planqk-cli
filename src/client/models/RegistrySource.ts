/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform API
 * Part of the OpenAPI specification for the PlanQK Platform.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@anaqor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime'
import type {ServiceSource} from './ServiceSource'
import {ServiceSourceFromJSONTyped, ServiceSourceToJSON} from './ServiceSource'

/**
 *
 * @export
 * @interface RegistrySource
 */
export interface RegistrySource extends ServiceSource {
    /**
     *
     * @type {string}
     * @memberof RegistrySource
     */
    image: string;
    /**
     *
     * @type {string}
     * @memberof RegistrySource
     */
    tag?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrySource
     * @deprecated
     */
    username?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrySource
     * @deprecated
     */
    password?: string;
}

/**
 * Check if a given object implements the RegistrySource interface.
 */
export function instanceOfRegistrySource(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "image" in value;

    return isInstance;
}

export function RegistrySourceFromJSON(json: any): RegistrySource {
    return RegistrySourceFromJSONTyped(json, false);
}

export function RegistrySourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ServiceSourceFromJSONTyped(json, ignoreDiscriminator),
        'image': json['image'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
    };
}

export function RegistrySourceToJSON(value?: RegistrySource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ServiceSourceToJSON(value),
        'image': value.image,
        'tag': value.tag,
        'username': value.username,
        'password': value.password,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform OpenAPI definition
 * OpenAPI definition for the Platform and Ecosystem for Quantum-assisted Artificial Intelligence Platform
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stoneone.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime'

/**
 *
 * @export
 * @interface TaxonomyElement
 */
export interface TaxonomyElement {
  /**
   *
   * @type {string}
   * @memberof TaxonomyElement
   */
  uuid?: string;
  /**
   *
   * @type {string}
   * @memberof TaxonomyElement
   */
  label?: string;
  /**
   *
   * @type {Array<TaxonomyElement>}
   * @memberof TaxonomyElement
   */
  children?: Array<TaxonomyElement>;
}

/**
 * Check if a given object implements the TaxonomyElement interface.
 */
export function instanceOfTaxonomyElement(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function TaxonomyElementFromJSON(json: any): TaxonomyElement {
  return TaxonomyElementFromJSONTyped(json, false)
}

export function TaxonomyElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxonomyElement {
  if ((json === undefined) || (json === null)) {
    return json
  }
  return {

    'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
    'label': !exists(json, 'label') ? undefined : json['label'],
    'children': !exists(json, 'children') ? undefined : ((json['children'] as Array<any>).map(TaxonomyElementFromJSON)),
  }
}

export function TaxonomyElementToJSON(value?: TaxonomyElement | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {

    'uuid': value.uuid,
    'label': value.label,
    'children': value.children === undefined ? undefined : ((value.children as Array<any>).map(TaxonomyElementToJSON)),
  }
}


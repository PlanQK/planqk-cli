/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform OpenAPI definition
 * OpenAPI definition for the Platform and Ecosystem for Quantum-assisted Artificial Intelligence Platform
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stoneone.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime'
import type {TaxonomyElement} from './TaxonomyElement'
import {TaxonomyElementFromJSON, TaxonomyElementToJSON} from './TaxonomyElement'

/**
 *
 * @export
 * @interface ApiOverviewDto
 */
export interface ApiOverviewDto {
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  serviceId?: string;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  provider?: string;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  type?: ApiOverviewDtoTypeEnum;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  lifecycle?: ApiOverviewDtoLifecycleEnum;
  /**
   *
   * @type {Set<TaxonomyElement>}
   * @memberof ApiOverviewDto
   */
  industries?: Set<TaxonomyElement>;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  pricingCategory?: ApiOverviewDtoPricingCategoryEnum;
  /**
   *
   * @type {number}
   * @memberof ApiOverviewDto
   */
  rating?: number;
  /**
   *
   * @type {string}
   * @memberof ApiOverviewDto
   */
  logoUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof ApiOverviewDto
   */
  isFeatured?: boolean;
}

/**
 * @export
 */
export const ApiOverviewDtoTypeEnum = {
  Managed: 'MANAGED',
  External: 'EXTERNAL',
} as const
export type ApiOverviewDtoTypeEnum = typeof ApiOverviewDtoTypeEnum[keyof typeof ApiOverviewDtoTypeEnum];

/**
 * @export
 */
export const ApiOverviewDtoLifecycleEnum = {
  Created: 'CREATED',
  Accessible: 'ACCESSIBLE',
  Published: 'PUBLISHED',
} as const
export type ApiOverviewDtoLifecycleEnum = typeof ApiOverviewDtoLifecycleEnum[keyof typeof ApiOverviewDtoLifecycleEnum];

/**
 * @export
 */
export const ApiOverviewDtoPricingCategoryEnum = {
  Free: 'FREE',
  Freemium: 'FREEMIUM',
  Commercial: 'COMMERCIAL',
} as const
export type ApiOverviewDtoPricingCategoryEnum = typeof ApiOverviewDtoPricingCategoryEnum[keyof typeof ApiOverviewDtoPricingCategoryEnum];

/**
 * Check if a given object implements the ApiOverviewDto interface.
 */
export function instanceOfApiOverviewDto(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ApiOverviewDtoFromJSON(json: any): ApiOverviewDto {
  return ApiOverviewDtoFromJSONTyped(json, false)
}

export function ApiOverviewDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiOverviewDto {
  if ((json === undefined) || (json === null)) {
    return json
  }
  return {

    'id': !exists(json, 'id') ? undefined : json['id'],
    'serviceId': !exists(json, 'serviceId') ? undefined : json['serviceId'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'provider': !exists(json, 'provider') ? undefined : json['provider'],
    'type': !exists(json, 'type') ? undefined : json['type'],
    'lifecycle': !exists(json, 'lifecycle') ? undefined : json['lifecycle'],
    'industries': !exists(json, 'industries') ? undefined : (new Set((json['industries'] as Array<any>).map(TaxonomyElementFromJSON))),
    'pricingCategory': !exists(json, 'pricingCategory') ? undefined : json['pricingCategory'],
    'rating': !exists(json, 'rating') ? undefined : json['rating'],
    'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
    'isFeatured': !exists(json, 'isFeatured') ? undefined : json['isFeatured'],
  }
}

export function ApiOverviewDtoToJSON(value?: ApiOverviewDto | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {

    'id': value.id,
    'serviceId': value.serviceId,
    'name': value.name,
    'provider': value.provider,
    'type': value.type,
    'lifecycle': value.lifecycle,
    'industries': value.industries === undefined ? undefined : (Array.from(value.industries as Set<any>).map(TaxonomyElementToJSON)),
    'pricingCategory': value.pricingCategory,
    'rating': value.rating,
    'logoUrl': value.logoUrl,
    'isFeatured': value.isFeatured,
  }
}


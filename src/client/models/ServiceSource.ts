/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform API
 * Part of the OpenAPI specification for the PlanQK Platform.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@anaqor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     FileSourceFromJSONTyped,
     RegistrySourceFromJSONTyped
} from './index';

/**
 * 
 * @export
 * @interface ServiceSource
 */
export interface ServiceSource {
    /**
     * 
     * @type {string}
     * @memberof ServiceSource
     */
    type?: string;
}

/**
 * Check if a given object implements the ServiceSource interface.
 */
export function instanceOfServiceSource(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ServiceSourceFromJSON(json: any): ServiceSource {
    return ServiceSourceFromJSONTyped(json, false);
}

export function ServiceSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceSource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'FileSource') {
            return FileSourceFromJSONTyped(json, true);
        }
        if (json['type'] === 'RegistrySource') {
            return RegistrySourceFromJSONTyped(json, true);
        }
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ServiceSourceToJSON(value?: ServiceSource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
    };
}


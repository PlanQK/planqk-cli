/* tslint:disable */
/* eslint-disable */
/**
 * PlanQK Platform API
 * Part of the OpenAPI specification for the PlanQK Platform.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@anaqor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime'

/**
 *
 * @export
 * @interface FileDto
 */
export interface FileDto {
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly id?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly mimeType?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly fileUrl?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly createdBy?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly modifiedBy?: string;
    /**
     *
     * @type {string}
     * @memberof FileDto
     */
    readonly modifiedAt?: string;
}

/**
 * Check if a given object implements the FileDto interface.
 */
export function instanceOfFileDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FileDtoFromJSON(json: any): FileDto {
    return FileDtoFromJSONTyped(json, false);
}

export function FileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'mimeType': !exists(json, 'mimeType') ? undefined : json['mimeType'],
        'fileUrl': !exists(json, 'fileUrl') ? undefined : json['fileUrl'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'modifiedBy': !exists(json, 'modifiedBy') ? undefined : json['modifiedBy'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : json['modifiedAt'],
    };
}

export function FileDtoToJSON(value?: FileDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'name': value.name,
    };
}


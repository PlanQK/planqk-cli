/**
 * PlanQK Platform OpenAPI definition
 * OpenAPI definition for the Platform and Ecosystem for Quantum-assisted Artificial Intelligence Platform
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stoneone.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PricingPlanDto } from './pricingPlanDto';
import { TaxonomyElement } from './taxonomyElement';

export class ApiDto {
    'id'?: string;
    'serviceId'?: string;
    'name'?: string;
    'context'?: string;
    'version'?: string;
    'description'?: string;
    'gatewayEndpoint'?: string;
    'quantumBackend'?: ApiDto.QuantumBackendEnum;
    'pricingPlans'?: Array<PricingPlanDto>;
    'pricingCategory'?: ApiDto.PricingCategoryEnum;
    'industries'?: Set<TaxonomyElement>;
    'provider'?: string;
    'lifecycle'?: ApiDto.LifecycleEnum;
    'serviceType'?: ApiDto.ServiceTypeEnum;
    'rating'?: number;
    'isFeatured'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "serviceId",
            "baseName": "serviceId",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "context",
            "baseName": "context",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "gatewayEndpoint",
            "baseName": "gatewayEndpoint",
            "type": "string"
        },
        {
            "name": "quantumBackend",
            "baseName": "quantumBackend",
            "type": "ApiDto.QuantumBackendEnum"
        },
        {
            "name": "pricingPlans",
            "baseName": "pricingPlans",
            "type": "Array<PricingPlanDto>"
        },
        {
            "name": "pricingCategory",
            "baseName": "pricingCategory",
            "type": "ApiDto.PricingCategoryEnum"
        },
        {
            "name": "industries",
            "baseName": "industries",
            "type": "Set<TaxonomyElement>"
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "string"
        },
        {
            "name": "lifecycle",
            "baseName": "lifecycle",
            "type": "ApiDto.LifecycleEnum"
        },
        {
            "name": "serviceType",
            "baseName": "serviceType",
            "type": "ApiDto.ServiceTypeEnum"
        },
        {
            "name": "rating",
            "baseName": "rating",
            "type": "number"
        },
        {
            "name": "isFeatured",
            "baseName": "isFeatured",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ApiDto.attributeTypeMap;
    }
}

export namespace ApiDto {
    export enum QuantumBackendEnum {
        Ibm = <any> 'IBM',
        Ionq = <any> 'IONQ',
        Dwave = <any> 'DWAVE',
        None = <any> 'NONE'
    }
    export enum PricingCategoryEnum {
        Free = <any> 'FREE',
        Freemium = <any> 'FREEMIUM',
        Commercial = <any> 'COMMERCIAL'
    }
    export enum LifecycleEnum {
        Error = <any> 'ERROR',
        Creating = <any> 'CREATING',
        Created = <any> 'CREATED',
        Accessible = <any> 'ACCESSIBLE',
        Published = <any> 'PUBLISHED'
    }
    export enum ServiceTypeEnum {
        Managed = <any> 'MANAGED',
        External = <any> 'EXTERNAL'
    }
}
